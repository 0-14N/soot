/* Soot - a J*va Optimization Framework
 * Copyright (C) 2003 Ondrej Lhotak
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

package soot.jimple.toolkits.callgraph;
import soot.*;
import soot.util.*;
import soot.util.queue.*;
import soot.jimple.spark.bdddomains.*;
import java.util.*;
import jedd.*;

/** A BDD implementation of the call graph.
 * @author Ondrej Lhotak
 */

public final class BDDCallGraph {
    public <srcm:V1, srcc:T1, stmt:ST, kind:H2, tgtm:V2, tgtc:T2> edges;
    public void addEdge( MethodOrMethodContext src, Unit s, MethodOrMethodContext tgt, int _kind ) {
        unitNumberer.add(s);
        addEdges( new { src.method()=>srcm, src.context()=>srcc,
            s=>stmt, KindNumberer.v().get(_kind)=>kind,
            tgt.method()=>tgtm, tgt.context()=>tgtc } );
    }
    public void addEdges( <srcm, srcc, stmt, kind, tgtm, tgtc> edges ) {
        this.edges |= edges;
        queue.add( edges );
    }
    public <srcm, srcc, stmt, kind, tgtm, tgtc> edgesOutOf( <srcm, srcc> m ) {
        return edges {srcm, srcc} >< m {srcm, srcc};
    }
    public <srcm, srcc, stmt, kind, tgtm, tgtc> edgesOutOf( SootMethod m ) {
        return edges {srcm} >< new { m=>srcm } {srcm};
    }
    public BDDReader newListener() {
        return queue.reader();
    }
    public BDDReader listener() {
        return (BDDReader) reader.clone();
    }

    private BDDQueue queue = new BDDQueue();
    private BDDReader reader = queue.reader();

    private Numberer unitNumberer = Scene.v().getUnitNumberer();
}

