/* Soot - a J*va Optimization Framework
 * Copyright (C) 2003 Ondrej Lhotak
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

package soot.jimple.spark.queue;
import soot.util.*;
import soot.jimple.spark.bdddomains.*;
import soot.jimple.spark.*;
import soot.jimple.toolkits.callgraph.*;
import soot.*;
import soot.util.queue.*;
import jedd.*;
import java.util.*;

public abstract class Rlocal_srcm_stmt_tgtm {
    public abstract Iterator iterator();
    public abstract <local:V1, srcm:T1, stmt:ST, tgtm:T2> get();
    public abstract boolean hasNext();
    public abstract class Tuple {
        public abstract Local local();
        public abstract SootMethod srcm();
        public abstract Unit stmt();
        public abstract SootMethod tgtm();
        public String toString() {
            StringBuffer ret = new StringBuffer();
            ret.append( local() ); ret.append( ", " );
            ret.append( srcm() ); ret.append( ", " );
            ret.append( stmt() ); ret.append( ", " );
            ret.append( tgtm() ); ret.append( ", " );
            return ret.toString();
        }
    }
}
